{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\IDS\\\\IESE-IDS\\\\odrl_pap_webservice\\\\src\\\\main\\\\ui\\\\odrl-pap\\\\src\\\\pages\\\\AnonymizeInRest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport PageHeader from \"../components/PageHeader\";\nimport EnhancedEncryptionIcon from \"@material-ui/icons/EnhancedEncryption\";\nimport { useStyle } from \"../components/Style\";\nimport { useHistory } from \"react-router-dom\";\nimport Form from \"../components/controls/Form\";\nimport IdentifyPolicy from \"../components/controls/IdentifyPolicy\";\nimport { OdrlPolicy } from \"../components/backend/OdrlPolicy\";\nimport Submit from \"../components/backend/Submit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnonymizeInRest() {\n  _s();\n\n  const classes = useStyle();\n  const [values, setValues] = useState(OdrlPolicy);\n  const [errors, setErrors] = useState({});\n  const history = useHistory();\n  const [states] = useState({\n    selected: \"null\"\n  });\n\n  const handleInputChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    Submit(\"/policy/AnonymizeInRestPolicyForm\", values, states, setErrors, history, e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.page,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"The assumption is that your data is stored in a database on consumer side.\\r This policy requests a specified IDS data consumer to anonymize your stored data.\",\n        icon: /*#__PURE__*/_jsxDEV(EnhancedEncryptionIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(IdentifyPolicy, {\n          values: values,\n          handleInputChange: handleInputChange,\n          errors: errors,\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.saveBtn,\n            type: \"submit\",\n            id: \"Save\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AnonymizeInRest, \"Ii3JD+5wqKwSOAXRnd9MNPqOxZI=\", false, function () {\n  return [useStyle, useHistory];\n});\n\n_c = AnonymizeInRest;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnonymizeInRest\");","map":{"version":3,"sources":["C:/Repos/IDS/IESE-IDS/odrl_pap_webservice/src/main/ui/odrl-pap/src/pages/AnonymizeInRest.js"],"names":["React","useState","Grid","Button","PageHeader","EnhancedEncryptionIcon","useStyle","useHistory","Form","IdentifyPolicy","OdrlPolicy","Submit","AnonymizeInRest","classes","values","setValues","errors","setErrors","history","states","selected","handleInputChange","e","target","name","value","handleSubmit","page","saveBtn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAMC,OAAO,GAAGP,QAAQ,EAAxB;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAACS,UAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMiB,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAM,CAACY,MAAD,IAAWlB,QAAQ,CAAC;AACxBmB,IAAAA,QAAQ,EAAE;AADc,GAAD,CAAzB;;AAGA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BP,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACQ,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAvC,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAIJ,CAAD,IAAO;AAC1BX,IAAAA,MAAM,CACJ,mCADI,EAEJG,MAFI,EAGJK,MAHI,EAIJF,SAJI,EAKJC,OALI,EAMJI,CANI,CAAN;AAQD,GATD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACc,IAAxB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAED,YAAhB;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,gKADR;AAGE,QAAA,IAAI,eAAE,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACE,QAAC,cAAD;AACE,UAAA,MAAM,EAAEZ,MADV;AAEE,UAAA,iBAAiB,EAAEO,iBAFrB;AAGE,UAAA,MAAM,EAAEL,MAHV;AAIE,UAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,SAAS,EAAEH,OAAO,CAACe,OAHrB;AAIE,YAAA,IAAI,EAAC,QAJP;AAKE,YAAA,EAAE,EAAC,MALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GApDuBhB,e;UACNN,Q,EAGAC,U;;;KAJMK,e","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport EnhancedEncryptionIcon from \"@material-ui/icons/EnhancedEncryption\";\r\nimport { useStyle } from \"../components/Style\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Form from \"../components/controls/Form\";\r\nimport IdentifyPolicy from \"../components/controls/IdentifyPolicy\";\r\nimport { OdrlPolicy } from \"../components/backend/OdrlPolicy\";\r\nimport Submit from \"../components/backend/Submit\";\r\n\r\nexport default function AnonymizeInRest() {\r\n  const classes = useStyle();\r\n  const [values, setValues] = useState(OdrlPolicy);\r\n  const [errors, setErrors] = useState({});\r\n  const history = useHistory();\r\n  const [states] = useState({\r\n    selected: \"null\",\r\n  });\r\n  const handleInputChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    Submit(\r\n      \"/policy/AnonymizeInRestPolicyForm\",\r\n      values,\r\n      states,\r\n      setErrors,\r\n      history,\r\n      e\r\n    );\r\n  };\r\n  return (\r\n    <div className={classes.page}>\r\n      <Form onSubmit={handleSubmit}>\r\n        <PageHeader\r\n          title=\"The assumption is that your data is stored in a database on consumer side.\r\n                This policy requests a specified IDS data consumer to anonymize your stored data.\"\r\n          icon={<EnhancedEncryptionIcon />}\r\n        />\r\n        <Grid container spacing={1}>\r\n          <IdentifyPolicy\r\n            values={values}\r\n            handleInputChange={handleInputChange}\r\n            errors={errors}\r\n            type=\"submit\"\r\n          />\r\n\r\n          <Grid item xs={2}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.saveBtn}\r\n              type=\"submit\"\r\n              id=\"Save\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
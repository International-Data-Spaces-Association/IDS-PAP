{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\IDS\\\\IESE-IDS\\\\odrl_pap_webservice\\\\src\\\\main\\\\ui\\\\odrl-pap\\\\src\\\\pages\\\\DeleteDataAfter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, Menu, MenuItem, Button } from \"@material-ui/core\";\nimport PageHeader from \"../components/PageHeader\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Input from \"../components/controls/Input\";\nimport Date from \"../components/controls/Date\";\nimport ItemPicker from \"../components/controls/ItemPicker\";\nimport { useHistory } from \"react-router-dom\";\nimport { time_units } from \"../components/controls/InitialFieldListValues\";\nimport { useStyle } from \"../components/Style\";\nimport Form from \"../components/controls/Form\";\nimport IdentifyPolicy from \"../components/controls/IdentifyPolicy\";\nimport { OdrlPolicy } from \"../components/backend/OdrlPolicy\";\nimport Submit from \"../components/backend/Submit\";\nimport Remove from \"../components/controls/Remove\";\nimport Title from \"../components/controls/Title\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst selected_components = {\n  time: false,\n  timeDate: false\n};\nexport default function DeleteDataAfter() {\n  _s();\n\n  const classes = useStyle();\n  const [values, setValues] = useState(OdrlPolicy);\n  const [errors, setErrors] = useState({});\n  const history = useHistory();\n  const [selectedComponents] = useState(selected_components);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const resetStates = () => {\n    for (var key in selectedComponents) {\n      if (selectedComponents.hasOwnProperty(key)) {\n        selectedComponents[key] = false;\n      }\n    }\n\n    setValues({ ...values,\n      time: \"\",\n      timeAndDate: \"\",\n      timeUnit: \"\"\n    });\n  };\n\n  const handleSelectedClose = e => {\n    selectedComponents[e.target.id] = true;\n    setAnchorEl(null);\n  };\n\n  const handleInputChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    if (Object.values(selectedComponents).some(x => x === true)) {\n      Submit(\"/policy/deletePolicyAfterUsage\", values, selectedComponents, setErrors, history, e);\n    } else {\n      Submit(\"/policy/deletePolicyAfterUsagePeriod\", values, selectedComponents, setErrors, history, e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.page,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [Object.values(selectedComponents).every(x => x === false) ? /*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"The assumption is that your data is stored in a database on consumer side.\",\n        icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : null, selectedComponents.time ? /*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"The assumption is that your data is stored in a database on consumer side.\\r This policy allows the Data Consumer to use your data and requests to delete it immediately after.s\",\n        icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : null, selectedComponents.timeDate ? /*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"The assumption is that your data is stored in a database on consumer side.\\r This policy requests to delete your data after a specified period of time.\",\n        icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(IdentifyPolicy, {\n          values: values,\n          handleInputChange: handleInputChange,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), selectedComponents.time ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              label: \"Specify a time duration that the application has to wait before deleting the data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"time\",\n              label: \"Duration value*\",\n              value: values.time,\n              placeholder: \"1\",\n              onChange: handleInputChange,\n              error: errors.time,\n              xs: 11,\n              sm: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              sm: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ItemPicker, {\n              name: \"timeUnit\",\n              label: \"Unit\",\n              defaultValue: \"\",\n              ItemList: time_units,\n              onChange: handleInputChange,\n              error: errors.timeUnit,\n              xs: 11,\n              sm: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Remove, {\n              onClick: resetStates\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : null, selectedComponents.timeDate ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              label: \"Specify an exact date and time to delete the data:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Date, {\n              name: \"timeAndDate\",\n              label: \"Date and Time*\",\n              defaultValue: \"\",\n              onChange: handleInputChange,\n              error: errors.timeAndDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Remove, {\n              onClick: resetStates\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : null, Object.values(selectedComponents).every(x => x === false) ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          container: true,\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              \"aria-controls\": \"simple-menu\",\n              \"aria-haspopup\": \"true\",\n              onClick: handleClick,\n              className: classes.addBtn,\n              id: \"Add Component\",\n              children: \"Add Component\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"simple-menu\",\n            anchorEl: anchorEl,\n            keepMounted: true,\n            open: Boolean(anchorEl),\n            onClose: handleClose,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: handleSelectedClose,\n              id: \"time\",\n              children: \"Specify time to wait before deleting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: handleSelectedClose,\n              id: \"timeDate\",\n              children: \"Specify exact time and date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.saveBtn,\n              type: \"submit\",\n              id: \"Save\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeleteDataAfter, \"M36OBV/P0NzAA9fUaguQNIxme6s=\", false, function () {\n  return [useStyle, useHistory];\n});\n\n_c = DeleteDataAfter;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteDataAfter\");","map":{"version":3,"sources":["C:/Repos/IDS/IESE-IDS/odrl_pap_webservice/src/main/ui/odrl-pap/src/pages/DeleteDataAfter.js"],"names":["React","useState","Grid","Menu","MenuItem","Button","PageHeader","DeleteIcon","Input","Date","ItemPicker","useHistory","time_units","useStyle","Form","IdentifyPolicy","OdrlPolicy","Submit","Remove","Title","selected_components","time","timeDate","DeleteDataAfter","classes","values","setValues","errors","setErrors","history","selectedComponents","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","resetStates","key","hasOwnProperty","timeAndDate","timeUnit","handleSelectedClose","e","target","id","handleInputChange","name","value","handleSubmit","Object","some","x","page","every","addBtn","Boolean","saveBtn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Grid, Menu, MenuItem, Button } from \"@material-ui/core\";\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Input from \"../components/controls/Input\";\r\nimport Date from \"../components/controls/Date\";\r\nimport ItemPicker from \"../components/controls/ItemPicker\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { time_units } from \"../components/controls/InitialFieldListValues\";\r\nimport { useStyle } from \"../components/Style\";\r\nimport Form from \"../components/controls/Form\";\r\nimport IdentifyPolicy from \"../components/controls/IdentifyPolicy\";\r\nimport { OdrlPolicy } from \"../components/backend/OdrlPolicy\";\r\nimport Submit from \"../components/backend/Submit\";\r\nimport Remove from \"../components/controls/Remove\";\r\nimport Title from \"../components/controls/Title\";\r\n\r\nconst selected_components = {\r\n  time: false,\r\n  timeDate: false,\r\n};\r\n\r\nexport default function DeleteDataAfter() {\r\n  const classes = useStyle();\r\n  const [values, setValues] = useState(OdrlPolicy);\r\n  const [errors, setErrors] = useState({});\r\n  const history = useHistory();\r\n  const [selectedComponents] = useState(selected_components);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const resetStates = () => {\r\n    for (var key in selectedComponents) {\r\n      if (selectedComponents.hasOwnProperty(key)) {\r\n        selectedComponents[key] = false;\r\n      }\r\n    }\r\n    setValues({ ...values, time: \"\", timeAndDate: \"\", timeUnit: \"\" });\r\n  };\r\n  const handleSelectedClose = (e) => {\r\n    selectedComponents[e.target.id] = true;\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    if (Object.values(selectedComponents).some((x) => x === true)) {\r\n      Submit(\r\n        \"/policy/deletePolicyAfterUsage\",\r\n        values,\r\n        selectedComponents,\r\n        setErrors,\r\n        history,\r\n        e\r\n      );\r\n    } else {\r\n      Submit(\r\n        \"/policy/deletePolicyAfterUsagePeriod\",\r\n        values,\r\n        selectedComponents,\r\n        setErrors,\r\n        history,\r\n        e\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.page}>\r\n      <Form onSubmit={handleSubmit}>\r\n        {Object.values(selectedComponents).every((x) => x === false) ? (\r\n          <PageHeader\r\n            title=\"The assumption is that your data is stored in a database on consumer side.\"\r\n            icon={<DeleteIcon />}\r\n          />\r\n        ) : null}\r\n        {selectedComponents.time ? (\r\n          <PageHeader\r\n            title=\"The assumption is that your data is stored in a database on consumer side.\r\n                    This policy allows the Data Consumer to use your data and requests to delete it immediately after.s\"\r\n            icon={<DeleteIcon />}\r\n          />\r\n        ) : null}\r\n        {selectedComponents.timeDate ? (\r\n          <PageHeader\r\n            title=\"The assumption is that your data is stored in a database on consumer side.\r\n                    This policy requests to delete your data after a specified period of time.\"\r\n            icon={<DeleteIcon />}\r\n          />\r\n        ) : null}\r\n        <Grid container spacing={1}>\r\n          <IdentifyPolicy\r\n            values={values}\r\n            handleInputChange={handleInputChange}\r\n            errors={errors}\r\n          />\r\n\r\n          {selectedComponents.time ? (\r\n            <>\r\n              <Grid container>\r\n                <Title label=\"Specify a time duration that the application has to wait before deleting the data\" />\r\n                <Input\r\n                  name=\"time\"\r\n                  label=\"Duration value*\"\r\n                  value={values.time}\r\n                  placeholder=\"1\"\r\n                  onChange={handleInputChange}\r\n                  error={errors.time}\r\n                  xs={11}\r\n                  sm={5}\r\n                />\r\n                <Grid sm={1} />\r\n\r\n                <ItemPicker\r\n                  name=\"timeUnit\"\r\n                  label=\"Unit\"\r\n                  defaultValue=\"\"\r\n                  ItemList={time_units}\r\n                  onChange={handleInputChange}\r\n                  error={errors.timeUnit}\r\n                  xs={11}\r\n                  sm={5}\r\n                />\r\n                <Remove onClick={resetStates} />\r\n              </Grid>\r\n            </>\r\n          ) : null}\r\n\r\n          {selectedComponents.timeDate ? (\r\n            <>\r\n              <Grid container>\r\n                <Title label=\"Specify an exact date and time to delete the data:\" />\r\n                <Date\r\n                  name=\"timeAndDate\"\r\n                  label=\"Date and Time*\"\r\n                  defaultValue=\"\"\r\n                  onChange={handleInputChange}\r\n                  error={errors.timeAndDate}\r\n                />\r\n                <Remove onClick={resetStates} />\r\n              </Grid>\r\n            </>\r\n          ) : null}\r\n          {Object.values(selectedComponents).every((x) => x === false) ? (\r\n            <Grid item xs={12} container justify=\"center\">\r\n              <Grid item xs={2}>\r\n                {\" \"}\r\n                <Button\r\n                  color=\"primary\"\r\n                  aria-controls=\"simple-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleClick}\r\n                  className={classes.addBtn}\r\n                  id=\"Add Component\"\r\n                >\r\n                  Add Component\r\n                </Button>\r\n              </Grid>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleSelectedClose} id=\"time\">\r\n                  Specify time to wait before deleting\r\n                </MenuItem>\r\n                <MenuItem onClick={handleSelectedClose} id=\"timeDate\">\r\n                  Specify exact time and date\r\n                </MenuItem>\r\n              </Menu>\r\n            </Grid>\r\n          ) : null}\r\n          <Grid item xs={12}>\r\n            <Grid item xs={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.saveBtn}\r\n                type=\"submit\"\r\n                id=\"Save\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
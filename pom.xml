<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.fraunhofer.iese.ids.odrl</groupId>
	<artifactId>odrl_pap_webservice</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>MYDATA :: PAP :: ODRL</name>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.8</version>
	</parent>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>manual</distribution>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>11</java.version>

		<start-class>de.fraunhofer.iese.ids.odrl.pap.OdrlPapApplication</start-class>

		<resource.delimiter>@</resource.delimiter>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven.compiler.release>${java.version}</maven.compiler.release>

		<snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>
		<project.build.finalName>mydata.odrlpap.webservice</project.build.finalName>
		<additionalparam>-Xdoclint:none</additionalparam>

		<docker.image.prefix>mydata</docker.image.prefix>
		<docker-maven-plugin-version>1.2.2</docker-maven-plugin-version>

		<frontend-src-dir>${project.basedir}/src/main/ui</frontend-src-dir>
		<frontend-maven-plugin.version>1.12.1</frontend-maven-plugin.version>
		<node.version>v16.19.0</node.version>
		<yarn.version>v1.22.19</yarn.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>de.fraunhofer.iese.ids.odrl</groupId>
			<artifactId>mydata-translator</artifactId>
			<version>1.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>de.fraunhofer.iese.ids.odrl</groupId>
			<artifactId>policy-library</artifactId>
			<version>1.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
    		<groupId>org.hibernate</groupId>
    		<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>converter-gson</artifactId>
			<version>2.9.0</version>
		</dependency>
		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
			<version>20220924</version>
		</dependency>
		<dependency>
		    <groupId>com.h2database</groupId>
		    <artifactId>h2</artifactId>
		    <scope>runtime</scope>
		</dependency>
		<dependency>
      		<groupId>org.mockito</groupId>
      		<artifactId>mockito-core</artifactId>
      		<scope>compile</scope>
    	</dependency>
		<dependency>
		    <groupId>io.github.bonigarcia</groupId>
		    <artifactId>webdrivermanager</artifactId>
		    <version>5.3.2</version>
		</dependency>

        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-chrome-driver -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-chrome-driver</artifactId>
        </dependency>
	</dependencies>

	<build>
		<finalName>mydata.odrlpap.webservice</finalName>
		<plugins>
			<!-- UI -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>${frontend-maven-plugin.version}</version>
				<configuration>
					<nodeVersion>${node.version}</nodeVersion>
					<yarnVersion>${yarn.version}</yarnVersion>
					<workingDirectory>${frontend-src-dir}</workingDirectory>
					<installDirectory>target</installDirectory>
				</configuration>

				<executions>
					<execution>
						<id>install-frontend-tools</id>
						<goals>
							<goal>install-node-and-yarn</goal>
						</goals>
					</execution>
					<execution>
						<id>yarn-install</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>build-frontend</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<arguments>build</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>position-react-build</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/src/main/resources/public</outputDirectory>
							<resources>
								<resource>
									<directory>${frontend-src-dir}/build</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- Allow JUnit to access the test classes -->
					<arguments>--add-opens java.base/java.lang=ALL-UNNAMED</arguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin-version}</version>
				<configuration>
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
						<version>1.1</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>com.amashchenko.maven.plugin</groupId>
				<artifactId>gitflow-maven-plugin</artifactId>
				<version>1.19.0</version>
			</plugin>
		</plugins>
	</build>
</project>
